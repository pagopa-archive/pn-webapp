#  Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
#  the License. A copy of the License is located at
#      http://aws.amazon.com/apache2.0/
#  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
#  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and
#  limitations under the License.

AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for the Sample Lambda Function
Parameters:
  ProductName:
    Description: Name of the Project
    Type: String
    Default: pn
  BranchName:
    Description: Name of the Project
    Type: String
    Default: main
  WebAppRepoName:
    Description: Name of the Github Repository infra
    Type: String
    Default: pagopa/pn-webapp
  BetaAccount:
    Description: AWS AccountNumber for test
    Type: Number
    Default: 558518206506
  CrossAccountCondition:
    Description: Conditionally creates the resources for cross account access
    Type: String
    Default: false
  
Conditions:
  AddCodeBuildResource: !Equals [ !Ref CrossAccountCondition, true ]

Resources:

  PipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProductName}-${BranchName}-webapp-pipeline-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProductName}-${BranchName}-webapp-pipeline-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - codepipeline:*
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - iam:ListRoles
              - iam:PassRole
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
            Resource:
              - "*"
          -
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-CMK-arn"}}
          -
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
             - !Join ['',['arn:aws:s3:::', { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-build-artifacts-buket-name"}}, '/*']]
             - !Join ['',['arn:aws:s3:::', { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-build-artifacts-buket-name"}} ]]
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${ProductName}-${BranchName}-from-github-to-s3-role
              - !Sub arn:aws:iam::${BetaAccount}:role/${ProductName}-${BranchName}-cicd-role
      Roles:
        -
          !Ref PipeLineRole
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProductName}-${BranchName}-webapp-codebuild-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProductName}-${BranchName}-webapp-codebuild-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - cloudfront:CreateInvalidation # Nopt used
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - "*"
            Resource:
              - "*"
          -
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-CMK-arn"}}
          -
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
             - !Join ['',['arn:aws:s3:::', { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-build-artifacts-buket-name"}}, '/*']]
             - !Join ['',['arn:aws:s3:::', { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-build-artifacts-buket-name"}} ]]
          - # For webapp deployment
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${BetaAccount}:role/${ProductName}-${BranchName}-cicd-role
      Roles:
        - !Ref CodeBuildRole
  
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProductName}-${BranchName}-webapp
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: scripts/aws/codebuild_spec.yaml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"

  WebAppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipeLineRole.Arn
      Name: !Sub '${ProductName}-${BranchName}-webapp'
      Stages:
        - Name: Source
          Actions:
            - Name: AppCode
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-github-connection"}} 
                FullRepositoryId: !Ref WebAppRepoName
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: SCCheckoutArtifact
              RunOrder: 1
              #RoleArn: !Sub arn:aws:iam::${DevAccount}:role/ToolsAcctCodePipelineCodeCommitRole
              RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${ProductName}-${BranchName}-from-github-to-s3-role
                  - !Ref AWS::NoValue
            - Name: InfraCfg
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                PollForSourceChanges: false
                S3ObjectKey: !Sub ${ProductName}-${BranchName}-beta-infrastructure-deploy-outputs.zip
                S3Bucket: { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-build-artifacts-buket-name"}}
              OutputArtifacts:
                - Name: InfraOutputs
              RunOrder: 1
              RoleArn:
                  Fn::If:
                  - AddCodeBuildResource
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${ProductName}-${BranchName}-from-github-to-s3-role
                  - !Ref AWS::NoValue
        - Name: BuildAndDeployToBeta
          Actions:
            - Name: CodeBuildWebApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: SCCheckoutArtifact
              InputArtifacts:
                - Name: SCCheckoutArtifact
                - Name: InfraOutputs
              OutputArtifacts:
                - Name: WebAppForBeta
              RunOrder: 1
              #RoleArn:
              #    Fn::If:
              #    - AddCodeBuildResource
              #    - !Sub arn:aws:iam::${DevAccount}:role/ToolsAcctCodePipelineCodeCommitRole
              #    - !Ref AWS::NoValue
        #- Name: DeployToBeta
        #  Actions:
        #    - Name: DeployToBetaS3
        #      ActionTypeId:
        #        Category: Deploy
        #        Owner: AWS
        #        Version: 1
        #        Provider: S3
        #      Configuration:
        #        ObjectKey: DeployedArtifacts
        #        Extract: true
        #        BucketName: pn-main-infra-cdn-s3bucketforwebsitecontent-2pw4o06wlqz7
        #      InputArtifacts:
        #        - Name: WebAppForBeta
        #      RunOrder: 1
        #      #RoleArn: !Sub arn:aws:iam::${TestAccount}:role/ToolsAcctCodePipelineCloudFormationRole  
        #      RoleArn:
        #          Fn::If:
        #          - AddCodeBuildResource
        #          - !Sub arn:aws:iam::${BetaAccount}:role/${ProductName}-${BranchName}-cicd-role
        #          - !Ref AWS::NoValue
      ArtifactStore:
        Type: S3
        Location: { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-build-artifacts-buket-name"}}
        EncryptionKey:
          Id:  { "Fn::ImportValue": {"Fn::Sub": "${ProductName}-${BranchName}-CMK-arn"}}
          Type: KMS

